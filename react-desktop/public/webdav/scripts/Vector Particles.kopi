(:Vector) = import "scripts/vector.js"

particlesCount = 10

initialPositions = Vector (
  0..(particlesCount - 1) | flatMap (n) =>
    [random 0..100, random 0..100]
)

initialVelocities = Vector (
  0..(particlesCount - 1) | flatMap (n) =>
    [0, 0]
)

ParticleSystem = component (setState) => {
  requestDebugAnimationFrame (handleUpdate) => {
    setState (
      positions = initialPositions
      velocities = initialVelocities
      frame = 0
    ) => {
      frame > 300 ? (
        initialPositions
        initialVelocities
        0
      ) : {
        (p, v) = Vector.applyGravity2D (positions, velocities)

        (p, v, frame + 1)
      }
    }

    requestDebugAnimationFrame handleUpdate
  }

  (positions = initialPositions, velocities = initialVelocities, frame = 0) => {
    Svg () {
      0..(particlesCount - 1) | map (index) => {
        Circle (
          cx: positions.(index * 2 + 0)
          cy: positions.(index * 2 + 1)
          r: 2
        )
      }
    }
  }
}

ParticleSystem () []
