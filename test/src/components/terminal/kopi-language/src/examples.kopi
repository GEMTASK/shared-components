assert = (description) => (value) => {
  (color, result) = value ? ("green-1", "SUCC") : ("red-1", "FAIL")

  View (horizontal: true) [
    Text (fillColor: color, padding: "xsmall") result
    Text (padding: "xsmall") description
  ]
}

factorial (n) = match n (
  0 => 1
  n => n * factorial (n - 1)
)

assert "factorial 5 == 120" (factorial 5 == 120)
assert "factorial 5 == 0" (factorial 5 == 0)

inspect (object) = match object (
  Array array => {
    items = array | map (item) => {
      inspect item
    } | toArray
    "[" ++ (items | join ", ") ++ "]"
  }
  Number number => String number
  String string => {
    "\"" ++ string ++ "\""
  }
)

inspect [1, "2", 3]



match 5 (
  n [n > 10] => "n > 10"
  n [n > 1] => "n > 1"
)

1..5 | map (n) => match n (
  _ [n > 3] => "n > 3"
  _ [n > 1] => "n > 1"
  _         => "n"
)


1..15 | map (n) => {
  match (n) (
    _ [n % 3 == 0 && n % 5 == 0] => "FizzBuzz"
    _ [n % 3 == 0] => "Fizz"
    _ [n % 5 == 0] => "Buzz"
    _ => n
  )
}
